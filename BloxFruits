if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport) or function() warn("Queue teleport not supported by this executor") end

local function sendWebhook(fruit)
	local url;

	if game:GetService("Players").LocalPlayer.Name == "CyberSalmon123" then
		url = "https://discord.com/api/webhooks/1366051662011039858/r_6tli69HLPEp9R9C4-JXc_BshuVz3ms3W_6OlrO9TM3u594SKYiKUHaZhDIal2xAtbo"
	elseif game:GetService("Players").LocalPlayer.Name == "jakubob9" then
		url = "https://discord.com/api/webhooks/1366051619212623895/jTtaTyFwu9WfwePJSbgvPskoR_hB0WnS-k0O2KJvJ2B6yRfj6LPWF3esHEOoPA_QVUZ_"
	end

	local response = request({
		Url = url,
		Method = 'POST',
		Headers = {
			['Content-Type'] = 'application/json'
		},
		Body = HttpService:JSONEncode({
			["content"] = "",
			["embeds"] = {{
				["title"] = "**FRUIT COLLECTED**",
				["description"] = game.Players.LocalPlayer.DisplayName.." (@"..game.Players.LocalPlayer.Name..")",
				["type"] = "rich",
				["color"] = 16711782,
				["fields"] = {
					{
						["name"] = "**FRUIT**",
						["value"] = fruit,
						["inline"] = true
					},
				}
			}}
		})
	})
end

local function setupAntiAFK()
    VirtualUser:CaptureController()
    VirtualUser:SetKeyDown("w")
    task.wait(0.1)
    VirtualUser:SetKeyUp("w")
end

local function returnHRP()
    if not LocalPlayer.Character then return end
    local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    return hrp
end

local function returnHUM()
    if not LocalPlayer.Character then return end
    local hum = LocalPlayer.Character:FindFirstChild("Humanoid")
    if not hum then return end
    return hum
end

local function spoofHRP()
    return true
end

local function spoofHUM()
    return true
end

local function TpTo(CFrame, Refresh)
    if not CFrame then return false end
    if Refresh then
        local hum = returnHUM()
        if hum then
            hum.Health = 0
        end
        LocalPlayer.CharacterAdded:Wait()
        for _ = 1, 10 do
            if returnHRP() and returnHUM() then break end
            task.wait(0.5)
        end
    end
    local hrp = returnHRP()
    if not hrp then return false end
    spoofHRP()
    spoofHUM()
    hrp.CFrame = CFrame
    return true
end

local function setTeam()
    local maxAttempts = 10
    local attempt = 1
    while attempt <= maxAttempts do
        if LocalPlayer.Team and LocalPlayer.Team.Name == "Pirates" then
            return true
        end
        local success, result = pcall(function()
            return ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
        end)
        if success and LocalPlayer.Team and LocalPlayer.Team.Name == "Pirates" then
            print("Successfully set team to Pirates")
            return true
        else
            warn("Team set attempt " .. attempt .. " failed: " .. tostring(result))
            task.wait(2)
        end
        attempt = attempt + 1
    end
    warn("Failed to set team after " .. maxAttempts .. " attempts")
    return false
end

local function serverHop()
	for _ = 1, 100 do
		local success, module = pcall(function()
			return loadstring(game:HttpGet("https://raw.githubusercontent.com/MadbukScripts/Server-Hop/refs/heads/main/Main.lua"))()
		end)
		if success and module then
			module:Teleport(game.PlaceId, 'Desc')
		else
			warn("Server hop module failed, using fallback")
			local TeleportService = game:GetService("TeleportService")
			local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
			for _, server in ipairs(servers.data) do
				if server.id ~= game.JobId then
					TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id)
					task.wait(5)
					break
				end
			end
		end
	end
end


local function runFruitCollector()
    if not (Players and Workspace and ReplicatedStorage) then
        warn("Services not loaded")
        return false
    end

    if not setTeam() then
        warn("Could not set team, aborting")
        return false
    end

    for _ = 1, 10 do
        if returnHRP() and returnHUM() then break end
        task.wait(0.5)
    end
    if not (returnHRP() and returnHUM()) then
        warn("Character not loaded")
        return false
    end

    local Fruit_InServer = false
    local Fruits_InServer = {}
    for _, v in ipairs(Workspace:GetChildren()) do
        if v:IsA("Tool") then
            Fruit_InServer = true
            table.insert(Fruits_InServer, v)
        end
    end

    if Fruit_InServer then
        for _, v in pairs(Fruits_InServer) do
            if returnHRP() and v:IsDescendantOf(Workspace) then
                if TpTo(v.Handle.CFrame, false) then
                    task.wait(2)
                    local Fruit_InHand = string.gsub(v.Name, " Fruit", "")
                    Fruit_InHand = Fruit_InHand .. "-" .. Fruit_InHand
                    local success, result = pcall(function()
                        return ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", Fruit_InHand, returnHRP().Parent:FindFirstChildOfClass("Tool"))
                    end)
                    if success then
						sendWebhook(Fruit_InHand)
                        print("Stored fruit: " .. Fruit_InHand)
                    else
                        warn("Failed to store fruit: " .. tostring(result))
                    end
                    task.wait(0.5)
                end
            end
        end
    end

    task.wait(2)
    serverHop()
    task.wait(10)
    return true
end

local function init()
    task.spawn(function()
        while true do
            setupAntiAFK()
            task.wait(300)
        end
    end)

    while true do
        local success, result = pcall(runFruitCollector)
        if not success then
            warn("Script error: " .. tostring(result))
            task.wait(5)
        elseif not result then
            task.wait(5)
        else
            task.wait(10)
        end
    end
end

LocalPlayer.OnTeleport:Connect(function(state)
    if queueteleport then
        queueteleport('print("LOADED"); loadstring(game:HttpGet("https://raw.githubusercontent.com/MadbukScripts/Scripts/refs/heads/main/BloxFruits"))()')
    end
end)

init()
